// নেভবার (Navbar) ডিজাইন
// স্ট্রাকচার:

// মাঝখানে একটি লোগো থাকবে।
// বামপাশে "ব্লগ" বাটন থাকবে।
// ডানপাশে হিসাবের ব্যালেন্স দেখানোর জন্য একটি আইকন সহ থাকবে।
// মাঝখানে "ডোনেশন" এবং "হিস্টোরি" বাটন থাকবে (ফিগমা অনুযায়ী)।
// ডোনেশন কার্ড:

// তিনটি ডোনেশন কার্ড থাকবে, যার মধ্যে থাকবে:
// বামপাশে একটি ছবি।
// ডোনেশনের শিরোনাম।
// ডোনেশনের তথ্য।
// বর্তমান ডোনেশন পরিমাণ।
// ডোনেশন পরিমাণের জন্য ইনপুট ফিল্ড।
// ডোনেশন সাবমিট করার জন্য একটি বাটন।
// হিস্টোরি সেকশন: শুরুতে লুকানো এবং খালি থাকবে।

// কার্যপ্রণালী (Functionalities)
// ডোনেশন এবং হিস্টোরি বাটন ফাংশনালিটি:

// "হিস্টোরি" বাটনে ক্লিক করলে ডোনেশনের তথ্য লুকানো হবে এবং হিস্টোরি দেখানো হবে।
// "ডোনেশন" বাটনে ক্লিক করলে হিস্টোরি লুকানো হবে এবং ডোনেশনের তথ্য দেখানো হবে।
// প্রত্যেক কার্ডের ডোনেশন ফাংশনালিটি:

// "Donate Now" বাটনে ক্লিক করলে:
// ইনপুটে দেওয়া পরিমাণ হিসাবের ব্যালেন্স থেকে কেটে নেওয়া হবে এবং নতুন ব্যালেন্স দেখানো হবে।
// কার্ডের বর্তমান ডোনেশন পরিমাণ বাড়বে।
// একটি অর্থবহ নোটিফিকেশন হিস্টোরি সেকশনে যোগ হবে।
// ইনপুট ভ্যালিডেশন:

// ইনপুট ফিল্ডে যদি ভুল ডাটা পাওয়া যায়, তাহলে একটি সতর্ক বার্তা দেখানো হবে এবং লেনদেন বন্ধ হবে।
// ডোনেশন পরিমাণ ভ্যালিডেশন:
// যদি ডোনেশন পরিমাণ অ্যাকাউন্ট ব্যালেন্সের থেকে বেশি হয়।
// যদি ইনপুট ফিল্ডে একটি অবৈধ সংখ্যা দেওয়া হয়।
// যদি ইনপুট ফিল্ড খালি থাকে।
// হিস্টোরি সেকশন:

// হিস্টোরি সেকশনে লেনদেনের নোটিফিকেশন দেখানো হবে, যার মধ্যে থাকবে:
// লেনদেনের তারিখ এবং সময়।
// ডোনেশনের পরিমাণ।
// ডোনেশনের নাম।
// চ্যালেঞ্জগুলো (Challenges)
// স্টিকি নেভবার: পেজের উপরে নেভবার স্থির (sticky) করতে হবে।

// ব্লগ পেজ: একটি blog.html ফাইল তৈরি করতে হবে এবং মেইন পেজের সাথে লিংক করতে হবে। এই পেজে থাকবে ৪টি প্রশ্ন এবং তাদের উত্তর:

// ডকুমেন্ট অবজেক্ট মডেল (DOM) কী?
// DOM থেকে কোনো এলিমেন্ট কিভাবে সিলেক্ট করা হয়?
// DOM এর প্রেক্ষাপটে ইভেন্ট ডেলিগেশন কী, এবং এটি কেন দরকারী?
// DOM ব্যবহার করে একটি এলিমেন্টের অ্যাট্রিবিউট এবং স্টাইল কিভাবে পরিবর্তন করা হয়?
// অ্যাক্টিভ স্টেট টগল: "ডোনেশন" এবং "হিস্টোরি" বাটনের অ্যাক্টিভ স্টেট টগল করতে হবে। অ্যাক্টিভ অবস্থায় বাটনের রঙ পরিবর্তিত হবে।

// স্ট্যাটিক মডাল: সফল ডোনেশনের পরে একটি স্ট্যাটিক মডাল দেখানো হবে।

// পুনঃব্যবহারযোগ্য ফাংশন (Reusable Functions): কমপক্ষে ২টি পুনঃব্যবহারযোগ্য ফাংশন তৈরি করতে হবে।

// রেসপন্সিভ ডিজাইন: অ্যাপ্লিকেশনটি বিভিন্ন স্ক্রিন সাইজের জন্য রেসপন্সিভ করতে হবে।
